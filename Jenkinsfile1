pipeline{
    agent any
  

     tools {
        jdk 'jdk17'
        nodejs 'node16'
    }

    environment{
         SCANNER_HOME = tool 'sonarqube'
    }

    stages {

        stage('git checkout') {
            steps{
                git branch: 'main' , url: 'https://github.com/Debiprsansingh/Myntra-jenkins.git'
            }

        }
        stage('clean workspace'){
            steps{
                cleanWs()
            }
        }

        stage("Sonarqube Analysis "){
            steps{
                withSonarQubeEnv('sonar-server') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=myntra-clone \
                    -Dsonar.projectKey=myntra-clone '''
                }
            }
        }

         stage("quality gate"){
           steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token' 
                }
            } 
        }

        stage('Install Dependencies') {
            steps {
                sh "npm install"
            }
        }

        stage('OWASP FS SCAN') {
            steps {
                dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
    }
}